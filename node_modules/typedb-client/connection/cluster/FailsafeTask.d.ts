import { Database } from "../../api/connection/database/Database";
import { ClusterClient } from "./ClusterClient";
export declare abstract class FailsafeTask<TResult> {
    private readonly _client;
    private readonly _database;
    protected constructor(client: ClusterClient, database: string);
    protected get client(): ClusterClient;
    protected get database(): string;
    abstract run(replica: Database.Replica): Promise<TResult>;
    rerun(replica: Database.Replica): Promise<TResult>;
    runPrimaryReplica(): Promise<TResult>;
    runAnyReplica(): Promise<TResult>;
    private seekPrimaryReplica;
    private fetchDatabaseReplicas;
    private waitForPrimaryReplicaSelection;
    private clusterNotAvailableError;
}
