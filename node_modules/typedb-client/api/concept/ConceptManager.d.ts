import { Thing } from "./thing/Thing";
import { AttributeType } from "./type/AttributeType";
import { EntityType } from "./type/EntityType";
import { RelationType } from "./type/RelationType";
import { ThingType } from "./type/ThingType";
export interface ConceptManager {
    getRootThingType(): Promise<ThingType>;
    getRootEntityType(): Promise<EntityType>;
    getRootRelationType(): Promise<RelationType>;
    getRootAttributeType(): Promise<AttributeType>;
    getThingType(label: string): Promise<ThingType>;
    getThing(iid: string): Promise<Thing>;
    getEntityType(label: string): Promise<EntityType>;
    putEntityType(label: string): Promise<EntityType>;
    getRelationType(label: string): Promise<RelationType>;
    putRelationType(label: string): Promise<RelationType>;
    getAttributeType(label: string): Promise<AttributeType>;
    putAttributeType(label: string, valueType: AttributeType.ValueType): Promise<AttributeType>;
}
