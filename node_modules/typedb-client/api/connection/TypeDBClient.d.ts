import { DatabaseManager } from "./database/DatabaseManager";
import { TypeDBOptions } from "./TypeDBOptions";
import { SessionType, TypeDBSession } from "./TypeDBSession";
import { UserManager } from "./user/UserManager";
export interface TypeDBClient {
    isOpen(): boolean;
    readonly databases: DatabaseManager;
    session(database: string, type: SessionType, options?: TypeDBOptions): Promise<TypeDBSession>;
    isCluster(): boolean;
    asCluster(): TypeDBClient.Cluster;
    close(): Promise<void>;
}
export declare namespace TypeDBClient {
    interface Cluster extends TypeDBClient {
        readonly users: UserManager;
        readonly databases: DatabaseManager.Cluster;
    }
}
