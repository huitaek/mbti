import { ClientDuplexStream } from "@grpc/grpc-js";
import { Transaction as TransactionProto } from "typedb-protocol/common/transaction_pb";
export declare class BatchDispatcher {
    private static BATCH_WINDOW_SMALL_MILLIS;
    private static BATCH_WINDOW_LARGE_MILLIS;
    private readonly _transmitter;
    private readonly _transactionStream;
    private _bufferedRequests;
    private _isRunning;
    constructor(transmitter: RequestTransmitter, transactionStream: ClientDuplexStream<TransactionProto.Client, TransactionProto.Server>);
    dispatch(req: TransactionProto.Req): void;
    dispatchNow(req: TransactionProto.Req): void;
    close(): void;
    private sendNow;
    private sendScheduledBatch;
    private setSchedule;
}
export declare class RequestTransmitter {
    readonly _dispatchers: Set<BatchDispatcher>;
    private _isOpen;
    constructor();
    close(): void;
    dispatcher(transactionStream: ClientDuplexStream<TransactionProto.Client, TransactionProto.Server>): BatchDispatcher;
}
