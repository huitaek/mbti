// package: typedb.protocol
// file: cluster/cluster_service.proto

/* tslint:disable */
/* eslint-disable */

import * as grpc from "@grpc/grpc-js";
import * as cluster_cluster_service_pb from "../cluster/cluster_service_pb";
import * as cluster_cluster_server_pb from "../cluster/cluster_server_pb";
import * as cluster_cluster_user_pb from "../cluster/cluster_user_pb";
import * as cluster_cluster_database_pb from "../cluster/cluster_database_pb";

interface ITypeDBClusterService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
    servers_all: ITypeDBClusterService_Iservers_all;
    users_contains: ITypeDBClusterService_Iusers_contains;
    users_create: ITypeDBClusterService_Iusers_create;
    users_all: ITypeDBClusterService_Iusers_all;
    user_password: ITypeDBClusterService_Iuser_password;
    user_token: ITypeDBClusterService_Iuser_token;
    user_delete: ITypeDBClusterService_Iuser_delete;
    databases_get: ITypeDBClusterService_Idatabases_get;
    databases_all: ITypeDBClusterService_Idatabases_all;
}

interface ITypeDBClusterService_Iservers_all extends grpc.MethodDefinition<cluster_cluster_server_pb.ServerManager.All.Req, cluster_cluster_server_pb.ServerManager.All.Res> {
    path: "/typedb.protocol.TypeDBCluster/servers_all";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_server_pb.ServerManager.All.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_server_pb.ServerManager.All.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_server_pb.ServerManager.All.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_server_pb.ServerManager.All.Res>;
}
interface ITypeDBClusterService_Iusers_contains extends grpc.MethodDefinition<cluster_cluster_user_pb.ClusterUserManager.Contains.Req, cluster_cluster_user_pb.ClusterUserManager.Contains.Res> {
    path: "/typedb.protocol.TypeDBCluster/users_contains";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUserManager.Contains.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUserManager.Contains.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUserManager.Contains.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUserManager.Contains.Res>;
}
interface ITypeDBClusterService_Iusers_create extends grpc.MethodDefinition<cluster_cluster_user_pb.ClusterUserManager.Create.Req, cluster_cluster_user_pb.ClusterUserManager.Create.Res> {
    path: "/typedb.protocol.TypeDBCluster/users_create";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUserManager.Create.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUserManager.Create.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUserManager.Create.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUserManager.Create.Res>;
}
interface ITypeDBClusterService_Iusers_all extends grpc.MethodDefinition<cluster_cluster_user_pb.ClusterUserManager.All.Req, cluster_cluster_user_pb.ClusterUserManager.All.Res> {
    path: "/typedb.protocol.TypeDBCluster/users_all";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUserManager.All.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUserManager.All.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUserManager.All.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUserManager.All.Res>;
}
interface ITypeDBClusterService_Iuser_password extends grpc.MethodDefinition<cluster_cluster_user_pb.ClusterUser.Password.Req, cluster_cluster_user_pb.ClusterUser.Password.Res> {
    path: "/typedb.protocol.TypeDBCluster/user_password";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUser.Password.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUser.Password.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUser.Password.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUser.Password.Res>;
}
interface ITypeDBClusterService_Iuser_token extends grpc.MethodDefinition<cluster_cluster_user_pb.ClusterUser.Token.Req, cluster_cluster_user_pb.ClusterUser.Token.Res> {
    path: "/typedb.protocol.TypeDBCluster/user_token";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUser.Token.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUser.Token.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUser.Token.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUser.Token.Res>;
}
interface ITypeDBClusterService_Iuser_delete extends grpc.MethodDefinition<cluster_cluster_user_pb.ClusterUser.Delete.Req, cluster_cluster_user_pb.ClusterUser.Delete.Res> {
    path: "/typedb.protocol.TypeDBCluster/user_delete";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUser.Delete.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUser.Delete.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_user_pb.ClusterUser.Delete.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_user_pb.ClusterUser.Delete.Res>;
}
interface ITypeDBClusterService_Idatabases_get extends grpc.MethodDefinition<cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res> {
    path: "/typedb.protocol.TypeDBCluster/databases_get";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res>;
}
interface ITypeDBClusterService_Idatabases_all extends grpc.MethodDefinition<cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, cluster_cluster_database_pb.ClusterDatabaseManager.All.Res> {
    path: "/typedb.protocol.TypeDBCluster/databases_all";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<cluster_cluster_database_pb.ClusterDatabaseManager.All.Req>;
    requestDeserialize: grpc.deserialize<cluster_cluster_database_pb.ClusterDatabaseManager.All.Req>;
    responseSerialize: grpc.serialize<cluster_cluster_database_pb.ClusterDatabaseManager.All.Res>;
    responseDeserialize: grpc.deserialize<cluster_cluster_database_pb.ClusterDatabaseManager.All.Res>;
}

export const TypeDBClusterService: ITypeDBClusterService;

export interface ITypeDBClusterServer extends grpc.UntypedServiceImplementation {
    servers_all: grpc.handleUnaryCall<cluster_cluster_server_pb.ServerManager.All.Req, cluster_cluster_server_pb.ServerManager.All.Res>;
    users_contains: grpc.handleUnaryCall<cluster_cluster_user_pb.ClusterUserManager.Contains.Req, cluster_cluster_user_pb.ClusterUserManager.Contains.Res>;
    users_create: grpc.handleUnaryCall<cluster_cluster_user_pb.ClusterUserManager.Create.Req, cluster_cluster_user_pb.ClusterUserManager.Create.Res>;
    users_all: grpc.handleUnaryCall<cluster_cluster_user_pb.ClusterUserManager.All.Req, cluster_cluster_user_pb.ClusterUserManager.All.Res>;
    user_password: grpc.handleUnaryCall<cluster_cluster_user_pb.ClusterUser.Password.Req, cluster_cluster_user_pb.ClusterUser.Password.Res>;
    user_token: grpc.handleUnaryCall<cluster_cluster_user_pb.ClusterUser.Token.Req, cluster_cluster_user_pb.ClusterUser.Token.Res>;
    user_delete: grpc.handleUnaryCall<cluster_cluster_user_pb.ClusterUser.Delete.Req, cluster_cluster_user_pb.ClusterUser.Delete.Res>;
    databases_get: grpc.handleUnaryCall<cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res>;
    databases_all: grpc.handleUnaryCall<cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, cluster_cluster_database_pb.ClusterDatabaseManager.All.Res>;
}

export interface ITypeDBClusterClient {
    servers_all(request: cluster_cluster_server_pb.ServerManager.All.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_server_pb.ServerManager.All.Res) => void): grpc.ClientUnaryCall;
    servers_all(request: cluster_cluster_server_pb.ServerManager.All.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_server_pb.ServerManager.All.Res) => void): grpc.ClientUnaryCall;
    servers_all(request: cluster_cluster_server_pb.ServerManager.All.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_server_pb.ServerManager.All.Res) => void): grpc.ClientUnaryCall;
    users_contains(request: cluster_cluster_user_pb.ClusterUserManager.Contains.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Contains.Res) => void): grpc.ClientUnaryCall;
    users_contains(request: cluster_cluster_user_pb.ClusterUserManager.Contains.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Contains.Res) => void): grpc.ClientUnaryCall;
    users_contains(request: cluster_cluster_user_pb.ClusterUserManager.Contains.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Contains.Res) => void): grpc.ClientUnaryCall;
    users_create(request: cluster_cluster_user_pb.ClusterUserManager.Create.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Create.Res) => void): grpc.ClientUnaryCall;
    users_create(request: cluster_cluster_user_pb.ClusterUserManager.Create.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Create.Res) => void): grpc.ClientUnaryCall;
    users_create(request: cluster_cluster_user_pb.ClusterUserManager.Create.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Create.Res) => void): grpc.ClientUnaryCall;
    users_all(request: cluster_cluster_user_pb.ClusterUserManager.All.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.All.Res) => void): grpc.ClientUnaryCall;
    users_all(request: cluster_cluster_user_pb.ClusterUserManager.All.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.All.Res) => void): grpc.ClientUnaryCall;
    users_all(request: cluster_cluster_user_pb.ClusterUserManager.All.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.All.Res) => void): grpc.ClientUnaryCall;
    user_password(request: cluster_cluster_user_pb.ClusterUser.Password.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Password.Res) => void): grpc.ClientUnaryCall;
    user_password(request: cluster_cluster_user_pb.ClusterUser.Password.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Password.Res) => void): grpc.ClientUnaryCall;
    user_password(request: cluster_cluster_user_pb.ClusterUser.Password.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Password.Res) => void): grpc.ClientUnaryCall;
    user_token(request: cluster_cluster_user_pb.ClusterUser.Token.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Token.Res) => void): grpc.ClientUnaryCall;
    user_token(request: cluster_cluster_user_pb.ClusterUser.Token.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Token.Res) => void): grpc.ClientUnaryCall;
    user_token(request: cluster_cluster_user_pb.ClusterUser.Token.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Token.Res) => void): grpc.ClientUnaryCall;
    user_delete(request: cluster_cluster_user_pb.ClusterUser.Delete.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Delete.Res) => void): grpc.ClientUnaryCall;
    user_delete(request: cluster_cluster_user_pb.ClusterUser.Delete.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Delete.Res) => void): grpc.ClientUnaryCall;
    user_delete(request: cluster_cluster_user_pb.ClusterUser.Delete.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Delete.Res) => void): grpc.ClientUnaryCall;
    databases_get(request: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res) => void): grpc.ClientUnaryCall;
    databases_get(request: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res) => void): grpc.ClientUnaryCall;
    databases_get(request: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res) => void): grpc.ClientUnaryCall;
    databases_all(request: cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.All.Res) => void): grpc.ClientUnaryCall;
    databases_all(request: cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.All.Res) => void): grpc.ClientUnaryCall;
    databases_all(request: cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.All.Res) => void): grpc.ClientUnaryCall;
}

export class TypeDBClusterClient extends grpc.Client implements ITypeDBClusterClient {
    constructor(address: string, credentials: grpc.ChannelCredentials, options?: Partial<grpc.ClientOptions>);
    public servers_all(request: cluster_cluster_server_pb.ServerManager.All.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_server_pb.ServerManager.All.Res) => void): grpc.ClientUnaryCall;
    public servers_all(request: cluster_cluster_server_pb.ServerManager.All.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_server_pb.ServerManager.All.Res) => void): grpc.ClientUnaryCall;
    public servers_all(request: cluster_cluster_server_pb.ServerManager.All.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_server_pb.ServerManager.All.Res) => void): grpc.ClientUnaryCall;
    public users_contains(request: cluster_cluster_user_pb.ClusterUserManager.Contains.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Contains.Res) => void): grpc.ClientUnaryCall;
    public users_contains(request: cluster_cluster_user_pb.ClusterUserManager.Contains.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Contains.Res) => void): grpc.ClientUnaryCall;
    public users_contains(request: cluster_cluster_user_pb.ClusterUserManager.Contains.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Contains.Res) => void): grpc.ClientUnaryCall;
    public users_create(request: cluster_cluster_user_pb.ClusterUserManager.Create.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Create.Res) => void): grpc.ClientUnaryCall;
    public users_create(request: cluster_cluster_user_pb.ClusterUserManager.Create.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Create.Res) => void): grpc.ClientUnaryCall;
    public users_create(request: cluster_cluster_user_pb.ClusterUserManager.Create.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.Create.Res) => void): grpc.ClientUnaryCall;
    public users_all(request: cluster_cluster_user_pb.ClusterUserManager.All.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.All.Res) => void): grpc.ClientUnaryCall;
    public users_all(request: cluster_cluster_user_pb.ClusterUserManager.All.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.All.Res) => void): grpc.ClientUnaryCall;
    public users_all(request: cluster_cluster_user_pb.ClusterUserManager.All.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUserManager.All.Res) => void): grpc.ClientUnaryCall;
    public user_password(request: cluster_cluster_user_pb.ClusterUser.Password.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Password.Res) => void): grpc.ClientUnaryCall;
    public user_password(request: cluster_cluster_user_pb.ClusterUser.Password.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Password.Res) => void): grpc.ClientUnaryCall;
    public user_password(request: cluster_cluster_user_pb.ClusterUser.Password.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Password.Res) => void): grpc.ClientUnaryCall;
    public user_token(request: cluster_cluster_user_pb.ClusterUser.Token.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Token.Res) => void): grpc.ClientUnaryCall;
    public user_token(request: cluster_cluster_user_pb.ClusterUser.Token.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Token.Res) => void): grpc.ClientUnaryCall;
    public user_token(request: cluster_cluster_user_pb.ClusterUser.Token.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Token.Res) => void): grpc.ClientUnaryCall;
    public user_delete(request: cluster_cluster_user_pb.ClusterUser.Delete.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Delete.Res) => void): grpc.ClientUnaryCall;
    public user_delete(request: cluster_cluster_user_pb.ClusterUser.Delete.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Delete.Res) => void): grpc.ClientUnaryCall;
    public user_delete(request: cluster_cluster_user_pb.ClusterUser.Delete.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_user_pb.ClusterUser.Delete.Res) => void): grpc.ClientUnaryCall;
    public databases_get(request: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res) => void): grpc.ClientUnaryCall;
    public databases_get(request: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res) => void): grpc.ClientUnaryCall;
    public databases_get(request: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.Get.Res) => void): grpc.ClientUnaryCall;
    public databases_all(request: cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.All.Res) => void): grpc.ClientUnaryCall;
    public databases_all(request: cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.All.Res) => void): grpc.ClientUnaryCall;
    public databases_all(request: cluster_cluster_database_pb.ClusterDatabaseManager.All.Req, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: cluster_cluster_database_pb.ClusterDatabaseManager.All.Res) => void): grpc.ClientUnaryCall;
}
